{
  "name": "or",
  "description": "Returns an element from an array when it matches a condition",
  "version": "0.2.0",
  "keywords": [
    "array",
    "utils"
  ],
  "author": {
    "name": "Florian Margaine",
    "email": "florian@margaine.com",
    "url": "http://margaine.com"
  },
  "main": "lib/or",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Ralt/or.git"
  },
  "bugs": {
    "url": "https://github.com/Ralt/or/issues"
  },
  "readme": "Returns the element of an array when the callback returns true.\n\nPurpose\n---\n\nThis module provides a similar function as `Array.prototype.filter`, but\nit returns the element, not an array. And it stops looping as soon as it\nfinds a result.\n\nUsage\n---\n\n```javascript\nvar arr = ['item', 'other', 'finally'];\n\nvar item = or(arr, function(item) {\n    return item === 'other';\n});\n\nconsole.log(item); // \"other\"\n\n// Real world example\nvar matchesSelector = or(['matchesSelector', 'mozMatchesSelector',\n    'webkitMatchesSelector', 'oMatchesSelector',\n    'msMatchesSelector'], function(shim) {\n    return shim in document.documentElement;\n});\n\ndocument.getElementById('some')[matchesSelector]('#some'); // true\n```\n\nAPI\n---\n\nThe module returns a function accepting the following arguments:\n\n- `array`: the array on which to iterate\n- `callback`: the function being called\n- `context`: the context on which to call the callback\n\nContributors\n---\n\n- [Florian Margaine](http://margaine.com)\n\nLicense\n---\n\nMIT License.\n",
  "readmeFilename": "README.md",
  "_id": "or@0.2.0",
  "dist": {
    "shasum": "693e0b4fbb30e59c0cd437c85762b6390dba7a72"
  },
  "_from": "or@0.x",
  "_resolved": "https://registry.npmjs.org/or/-/or-0.2.0.tgz"
}
